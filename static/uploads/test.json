{"function_call": {"name": "repl_repl_post", "arguments": "{\"language\": \"python\",\n\"code\": \"\nclass TreeNode:\n    def __init__(self, x):\n        self.val = x\n        self.left = None\n        self.right = None\n\ndef invert_tree(node):\n    if node is None:\n        return None\n    node.left, node.right = node.right, node.left\n    invert_tree(node.left)\n    invert_tree(node.right)\n    return node\n\n# Function to do inorder traversal and print the node values\ndef print_inorder(node):\n    if node is None:\n        return\n    print_inorder(node.left)\n    print(node.val, end=' ')\n    print_inorder(node.right)\n\n# Creating our example binary tree\nroot = TreeNode(1)\nroot.left = TreeNode(2)\nroot.right = TreeNode(3)\nroot.left.left = TreeNode(4)\nroot.left.right = TreeNode(5)\nroot.right.left = TreeNode(6)\nroot.right.right = TreeNode(7)\n\nprint('Original tree: ', end='')\nprint_inorder(root)\nprint()\n\n# Inverting the tree\ninvert_tree(root)\n\nprint('Inverted tree: ', end='')\nprint_inorder(root)\nprint()\n\"\n}"}}